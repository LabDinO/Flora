WARNING:tensorflow:From C:\Users\flora\OneDrive\Documentos\MESTRADO_UFSC\rotinas\python\MESTRA\Lib\site-packages\keras\src\backend.py:873: The name tf.get_default_graph is deprecated. Please use tf.compat.v1.get_default_graph instead.
WARNING:tensorflow:From C:\Users\flora\OneDrive\Documentos\MESTRADO_UFSC\rotinas\python\MESTRA\Lib\site-packages\keras\src\optimizers\__init__.py:309: The name tf.train.Optimizer is deprecated. Please use tf.compat.v1.train.Optimizer instead.
[34m[1mwandb[39m[22m: [33mWARNING[39m The save_model argument by default saves the model in the HDF5 format that cannot save custom objects like subclassed models and custom layers. This behavior will be deprecated in a future release in favor of the SavedModel format. Meanwhile, the HDF5 model is saved as W&B files and the SavedModel as W&B Artifacts.
Epoch 1/10
Traceback (most recent call last):
  File "C:\Users\flora\OneDrive\Documentos\MESTRADO_UFSC\rotinas\python\ml-class\my_data\test_run_conv_mydata.py", line 98, in <module>
    very_simple_model.fit(x_train_normalized, y_train, epochs=config.epochs, validation_data=(x_test_normalized, y_test), callbacks=[WandbCallback()])
  File "C:\Users\flora\OneDrive\Documentos\MESTRADO_UFSC\rotinas\python\MESTRA\Lib\site-packages\keras\src\utils\traceback_utils.py", line 70, in error_handler
    raise e.with_traceback(filtered_tb) from None
  File "C:\Users\flora\AppData\Local\Temp\__autograph_generated_fileko0xv770.py", line 18, in tf__train_function
    raise
ValueError: in user code:
    File "C:\Users\flora\OneDrive\Documentos\MESTRADO_UFSC\rotinas\python\MESTRA\Lib\site-packages\keras\src\engine\training.py", line 1401, in train_function  *
        return step_function(self, iterator)
    File "C:\Users\flora\OneDrive\Documentos\MESTRADO_UFSC\rotinas\python\MESTRA\Lib\site-packages\keras\src\engine\training.py", line 1384, in step_function  **
        outputs = model.distribute_strategy.run(run_step, args=(data,))
    File "C:\Users\flora\OneDrive\Documentos\MESTRADO_UFSC\rotinas\python\MESTRA\Lib\site-packages\keras\src\engine\training.py", line 1373, in run_step  **
        outputs = model.train_step(data)
    File "C:\Users\flora\OneDrive\Documentos\MESTRADO_UFSC\rotinas\python\MESTRA\Lib\site-packages\keras\src\engine\training.py", line 1151, in train_step
        loss = self.compute_loss(x, y, y_pred, sample_weight)
    File "C:\Users\flora\OneDrive\Documentos\MESTRADO_UFSC\rotinas\python\MESTRA\Lib\site-packages\keras\src\engine\training.py", line 1209, in compute_loss
        return self.compiled_loss(
    File "C:\Users\flora\OneDrive\Documentos\MESTRADO_UFSC\rotinas\python\MESTRA\Lib\site-packages\keras\src\engine\compile_utils.py", line 277, in __call__
        loss_value = loss_obj(y_t, y_p, sample_weight=sw)
    File "C:\Users\flora\OneDrive\Documentos\MESTRADO_UFSC\rotinas\python\MESTRA\Lib\site-packages\keras\src\losses.py", line 143, in __call__
        losses = call_fn(y_true, y_pred)
    File "C:\Users\flora\OneDrive\Documentos\MESTRADO_UFSC\rotinas\python\MESTRA\Lib\site-packages\keras\src\losses.py", line 270, in call  **
        return ag_fn(y_true, y_pred, **self._fn_kwargs)
    File "C:\Users\flora\OneDrive\Documentos\MESTRADO_UFSC\rotinas\python\MESTRA\Lib\site-packages\keras\src\losses.py", line 2221, in categorical_crossentropy
        return backend.categorical_crossentropy(
    File "C:\Users\flora\OneDrive\Documentos\MESTRADO_UFSC\rotinas\python\MESTRA\Lib\site-packages\keras\src\backend.py", line 5573, in categorical_crossentropy
        target.shape.assert_is_compatible_with(output.shape)
    ValueError: Shapes (None, 2) and (None, 25) are incompatible